//
// Generated by JTB 1.3.2
//

package visitor;
import syntaxtree.*;
import java.util.*;

/**
 * Provides default methods which visit each node in the tree in depth-first
 * order.  Your visitors may extend this class.
 */
public class GJNoArguDepthFirst<R> implements GJNoArguVisitor<R> {
   //
   // Auto class visitors--probably don't need to be overridden.
   //
   public R visit(NodeList n) {
      R _ret=null;
      int _count=0;
      for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); ) {
         e.nextElement().accept(this);
         _count++;
      }
      return _ret;
   }

   public R visit(NodeListOptional n) {
      if ( n.present() ) {
         R _ret=null;
         int _count=0;
         for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); ) {
            e.nextElement().accept(this);
            _count++;
         }
         return _ret;
      }
      else
         return null;
   }

   public R visit(NodeOptional n) {
      if ( n.present() )
         return n.node.accept(this);
      else
         return null;
   }

   public R visit(NodeSequence n) {
      R _ret=null;
      int _count=0;
      for ( Enumeration<Node> e = n.elements(); e.hasMoreElements(); ) {
         e.nextElement().accept(this);
         _count++;
      }
      return _ret;
   }

   public R visit(NodeToken n) { return null; }

   //
   // User-generated visitor methods below
   //

   /**
    * f0 -> NomeEsteso()
    * f1 -> <SEPARATORE>
    * f2 -> ( Opzioni() <SEPARATORE> )*
    * f3 -> ( Sottoricetta() <SEPARATORE> )*
    * f4 -> <_INGREDIENTI>
    * f5 -> ListaIngredienti()
    * f6 -> <SEPARATORE>
    * f7 -> <_PREPARAZIONE>
    * f8 -> Preparazione()
    * f9 -> ( <FINENOTA> | <EOF> )
    * f10 -> ( <FINE> | <EOF> )
    */
   public R visit(Ricetta n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      n.f2.accept(this);
      n.f3.accept(this);
      n.f4.accept(this);
      n.f5.accept(this);
      n.f6.accept(this);
      n.f7.accept(this);
      n.f8.accept(this);
      n.f9.accept(this);
      n.f10.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(NomeEsteso n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <_SALVA> NomeSalvataggio() | <_AUTORE> Autore() | <_CATEGORIA> TipoCategoria() | <_DIFFICOLTA> ValoreDifficolta() | <_TEMPO> Tempo() | <_PRIVATA> Privata() | <_STRUMENTI> ListaStrumenti() | <_FESTIVITA> Festivita() | <_PROMEMORIA> Promemoria() )
    */
   public R visit(Opzioni n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(NomeSalvataggio n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(Autore n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> CategoriaInf()
    * f1 -> [ "(" CategoriaSup() ")" ]
    */
   public R visit(TipoCategoria n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(CategoriaInf n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(CategoriaSup n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <NUM>
    */
   public R visit(ValoreDifficolta n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> TempoSup()
    * f1 -> [ [ <STRING> ] TempoInf() ]
    */
   public R visit(Tempo n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> Durata()
    * f1 -> UnitaTempo()
    */
   public R visit(TempoSup n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> Durata()
    * f1 -> UnitaTempo()
    */
   public R visit(TempoInf n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> <NUM>
    */
   public R visit(Durata n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(UnitaTempo n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(Privata n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> Strumento()
    * f1 -> ( "," Strumento() )*
    */
   public R visit(ListaStrumenti n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(Strumento n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(Festivita n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> | <NUM> )+
    */
   public R visit(Promemoria n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <_PREPARA> Ricetta() | <_APRI> Apri() )
    */
   public R visit(Sottoricetta n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> NomeSottoricetta()
    * f1 -> [ "(" AutoreSottoricetta() ")" ]
    */
   public R visit(Apri n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(NomeSottoricetta n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <STRING>
    */
   public R visit(AutoreSottoricetta n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> Ingrediente()
    * f1 -> ( "," Ingrediente() )*
    */
   public R visit(ListaIngredienti n) {
      R _ret=null;
      n.f0.accept(this);
      n.f1.accept(this);
      return _ret;
   }

   /**
    * f0 -> QuantitaIngrediente() TipoIngrediente()
    *       | TipoIngrediente() [ QuantitaIngrediente() ]
    */
   public R visit(Ingrediente n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( <STRING> )+
    */
   public R visit(TipoIngrediente n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <QUANTITA>
    *       | <NUM>
    */
   public R visit(QuantitaIngrediente n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> ( Nota() | <_OPENLINK> Link() [ <_STARTDESC> DescrizioneLink() ] <_CLOSELINK> )+
    */
   public R visit(Preparazione n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <NOTA>
    */
   public R visit(Nota n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <ADVSTRING>
    */
   public R visit(Link n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

   /**
    * f0 -> <ADVSTRING>
    */
   public R visit(DescrizioneLink n) {
      R _ret=null;
      n.f0.accept(this);
      return _ret;
   }

}
